# Generated by Django 4.2.6 on 2023-10-30 14:05

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('main_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Scan',
            fields=[
                ('scan_slug', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('scan_status', models.CharField(choices=[('IN_QUEUE', 'In Queue'), ('SCAN_INITIATED', 'Scan Initiated'), ('SCAN_COMPLETED', 'Scan Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('scan_created', models.DateField(blank=True, default=None, null=True)),
                ('scan_start', models.DateField(blank=True, default=None, null=True)),
                ('scan_end', models.DateField(blank=True, default=None, null=True)),
                ('static_scan_status', models.CharField(choices=[('IN_QUEUE', 'In Queue'), ('SCAN_INITIATED', 'Scan Initiated'), ('SCAN_COMPLETED', 'Scan Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('static_scan_start', models.DateField(blank=True, default=None, null=True)),
                ('static_scan_end', models.DateField(blank=True, default=None, null=True)),
                ('dynamic_scan_status', models.CharField(choices=[('IN_QUEUE', 'In Queue'), ('SCAN_INITIATED', 'Scan Initiated'), ('SCAN_COMPLETED', 'Scan Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('dynamic_scan_start', models.DateField(blank=True, default=None, null=True)),
                ('dynamic_scan_end', models.DateField(blank=True, default=None, null=True)),
                ('api_scan_status', models.CharField(choices=[('IN_QUEUE', 'In Queue'), ('SCAN_INITIATED', 'Scan Initiated'), ('SCAN_COMPLETED', 'Scan Completed'), ('FAILED', 'Failed')], max_length=20)),
                ('api_scan_start', models.DateField(blank=True, default=None, null=True)),
                ('api_scan_end', models.DateField(blank=True, default=None, null=True)),
                ('app_hash', models.CharField(max_length=255)),
                ('modified_app_hash', models.CharField(max_length=255)),
                ('score', models.IntegerField(blank=True, default=None, null=True)),
                ('file_path', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'scan',
            },
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.CharField(max_length=255, primary_key=True, serialize=False)),
                ('report_status', models.CharField(choices=[('IN_PROCESS', 'In Process'), ('GENERATED', 'Generated'), ('FAILED', 'Failed')], max_length=20)),
                ('score', models.IntegerField()),
                ('high_vulnerability_count', models.IntegerField()),
                ('medium_vulnerability_count', models.IntegerField()),
                ('low_vulnerability_count', models.IntegerField()),
                ('info_vulnerability_count', models.IntegerField()),
                ('test_case_executed_count', models.IntegerField()),
                ('test_case_dropped_count', models.IntegerField()),
                ('test_case_inconclusive_count', models.IntegerField()),
                ('m1_issues_count', models.IntegerField()),
                ('m2_issues_count', models.IntegerField()),
                ('m3_issues_count', models.IntegerField()),
                ('m4_issues_count', models.IntegerField()),
                ('m5_issues_count', models.IntegerField()),
                ('m6_issues_count', models.IntegerField()),
                ('m7_issues_count', models.IntegerField()),
                ('m8_issues_count', models.IntegerField()),
                ('m9_issues_count', models.IntegerField()),
                ('m10_issues_count', models.IntegerField()),
                ('report_path', models.CharField(max_length=255)),
                ('scan_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main_app.scan')),
            ],
            options={
                'db_table': 'report',
            },
        ),
    ]
